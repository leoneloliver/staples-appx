{"ast":null,"code":"var _jsxFileName = \"/Users/lendified/Desktop/staples-x/src/views/Form.js\";\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputText from '../components/InputText';\nimport Select from '../components/Select';\nimport TextArea from '../components/TextArea';\nimport CheckBox from '../components/CheckBox';\nimport SubmitButton from '../components/SubmitButton';\nimport ErrorAlertMsg from '../components/ErrorAlertMsg'; // import $ from 'jquery';\n\nimport * as utils from '../utils/utils';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkExtraField = event => {\n      if (event.target.value == 'Mustard' || event.target.value == 'Mustardee') {\n        this.setState({\n          extraField: true\n        });\n      } else {\n        this.setState({\n          extraField: false\n        });\n      }\n    };\n\n    this.handleClickNext = this.handleClickNext.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.state = {\n      language: '',\n      email: '',\n      password: '',\n      selectOptions: utils.selectList(),\n      province: '',\n      textarea: '',\n      checkbox: false,\n      extraField: false,\n      extra: '',\n      phonenumber: '',\n      postalcode: '',\n      date: ''\n    };\n  }\n\n  componentWillMount() {\n    let iniLang = localStorage.getItem('lang');\n    this.setState({\n      language: iniLang\n    });\n  }\n\n  componentDidMount() {\n    utils.customSelect();\n    utils.magicLabels();\n    this.setState({\n      selectOptions: utils.selectList(this.state.language)\n    });\n    utils.maskPhone();\n    utils.maskDate();\n    utils.typeSelecBehavior();\n  }\n\n  componentDidUpdate() {\n    utils.magicLabels();\n  }\n\n  callNextPage(page) {\n    const divLoad = document.getElementById(\"loading\");\n    divLoad.classList.remove('d-none');\n    let This = this;\n    setTimeout(function () {\n      This.props.history.push(page);\n      window.scrollTo(0, 0);\n      divLoad.classList.add('d-none');\n    }, 2000);\n  }\n\n  disableSubmit() {\n    // disable submit after click\n    const submitButton = document.getElementById('submit');\n    submitButton.setAttribute('disabled', 'disabled');\n    document.getElementsByClassName('spinner-border')[0].classList.remove('d-none');\n  }\n\n  handleClickNext(event) {\n    event.preventDefault(); // validations for fields \n\n    let isValid = utils.validateForm();\n\n    if (isValid) {\n      console.log('call to action');\n      this.disableSubmit();\n      const $this = event.target;\n      console.log($this.province.value);\n      console.log($this.email.value);\n      console.log($this.textarea.value);\n      console.log($this.password.value);\n      console.log($this.phonenumber.value);\n      console.log($this.postalcode.value);\n      console.log($this.remember.value);\n\n      if ($this.extra) {\n        console.log($this.extra.value);\n      } //moving to another page\n\n\n      this.callNextPage('Options'); //  call API's here\n    }\n  }\n\n  handleCheckBox(e) {\n    let checkboxVal = '';\n\n    if (this.state.checkbox == false) {\n      checkboxVal = true;\n    } else {\n      checkboxVal = false;\n    }\n\n    this.setState({\n      checkbox: checkboxVal\n    });\n  }\n\n  render() {\n    const t = this.props.t;\n    let extraField = null;\n\n    if (this.state.extraField) {\n      extraField = React.createElement(InputText, {\n        inputtype: \"text\",\n        name: \"extra\",\n        placeholder: \"extra\",\n        required: \"\",\n        value: this.state.extra,\n        idname: \"extra\",\n        onChange: event => this.setState({\n          extra: event.target.value\n        }),\n        title: \"extra\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container py-md-5 card mt-5 mb-6 border-0 mainform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row card-body mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 offset-lg-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h6 medium mb-4 super-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-circle dotz\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), \"\\xA0\", t('title1.label')), React.createElement(\"form\", {\n      autoComplete: \"off\",\n      name: \"form\",\n      className: \"form\",\n      id: \"form\",\n      onSubmit: this.handleClickNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Select, {\n      title: \"\",\n      name: \"province\",\n      placeholder: t('select.label'),\n      options: this.state.selectOptions,\n      action: this.checkExtraField,\n      optionSelected: this.state.province,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), extraField, React.createElement(InputText, {\n      inputtype: \"email\",\n      name: \"email\",\n      placeholder: t('emailaddress.label'),\n      required: \"\",\n      value: this.state.email,\n      idname: \"email\",\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      autoComplete: \"username\",\n      title: t('emailaddress.label'),\n      required: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(InputText, {\n      inputtype: \"password\",\n      name: \"password\",\n      placeholder: t('password.label'),\n      required: \"\",\n      value: this.state.password,\n      idname: \"password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      autoComplete: \"new-password\",\n      title: t('password.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      name: \"textarea\",\n      value: this.state.textarea,\n      idname: \"textarea\",\n      onChange: event => this.setState({\n        textarea: event.target.value\n      }),\n      rows: 4,\n      placeholder: t('textarea.label'),\n      title: t('textarea.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(InputText, {\n      inputtype: \"text\",\n      title: t('phonenumber.label'),\n      name: \"phonenumber\",\n      placeholder: t('phonenumber.label'),\n      required: \"\",\n      id: \"phonemask\",\n      value: this.state.phonenumber,\n      maxLength: 14,\n      className: \"form-control input_element phonemask\",\n      onChange: event => this.setState({\n        phonenumber: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(InputText, {\n      inputtype: \"text\",\n      title: t('postalcode.label'),\n      name: \"postalcode\",\n      placeholder: t('postalcode.label'),\n      value: this.state.postalcode,\n      required: \"\",\n      maxLength: 7,\n      onChange: event => this.setState({\n        postalcode: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      name: \"remember\",\n      idname: \"remember\",\n      label: t('remember.label'),\n      value: true,\n      onChange: this.handleCheckBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(InputText, {\n      inputtype: \"text\",\n      title: \"Date fo Birth\",\n      name: \"date\",\n      placeholder: \"yyyy/mm/dd\",\n      required: \"\",\n      id: \"date\",\n      value: this.state.date,\n      maxLength: 10,\n      className: \"form-control input_element\",\n      onChange: event => this.setState({\n        date: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      name: \"NextStep\",\n      inputtype: \"submit\",\n      action: this.onSubmit,\n      id: \"submit\",\n      label: t('submit.label'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(ErrorAlertMsg, {\n      id: \"error-container\",\n      text: \"Please fill out all required fields!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withTranslation()(Form);","map":{"version":3,"sources":["/Users/lendified/Desktop/staples-x/src/views/Form.js"],"names":["React","Component","withTranslation","InputText","Select","TextArea","CheckBox","SubmitButton","ErrorAlertMsg","utils","Form","constructor","props","checkExtraField","event","target","value","setState","extraField","handleClickNext","bind","handleCheckBox","state","language","email","password","selectOptions","selectList","province","textarea","checkbox","extra","phonenumber","postalcode","date","componentWillMount","iniLang","localStorage","getItem","componentDidMount","customSelect","magicLabels","maskPhone","maskDate","typeSelecBehavior","componentDidUpdate","callNextPage","page","divLoad","document","getElementById","classList","remove","This","setTimeout","history","push","window","scrollTo","add","disableSubmit","submitButton","setAttribute","getElementsByClassName","preventDefault","isValid","validateForm","console","log","$this","remember","e","checkboxVal","render","t","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputText from '../components/InputText';\nimport Select from '../components/Select';\nimport TextArea from '../components/TextArea';\nimport CheckBox from '../components/CheckBox';\nimport SubmitButton from '../components/SubmitButton';\nimport ErrorAlertMsg from '../components/ErrorAlertMsg';\n// import $ from 'jquery';\nimport * as utils from '../utils/utils';\n\nclass Form extends Component {\n\n  constructor(props){\n    super(props);\n    this.handleClickNext = this.handleClickNext.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.state = {\n      language: '',\n      email: '',\n      password: '',\n      selectOptions: utils.selectList(),\n      province: '',\n      textarea: '',\n      checkbox: false,\n      extraField: false,\n      extra: '',\n      phonenumber: '',\n      postalcode: '',\n      date: '',\n\n    }\n  }\n\n  componentWillMount(){\n    let iniLang = localStorage.getItem('lang');\n    this.setState({language: iniLang});\n  }\n\n  componentDidMount(){\n    utils.customSelect();\n    utils.magicLabels();\n    this.setState({selectOptions: utils.selectList(this.state.language)});\n    utils.maskPhone();\n    utils.maskDate();\n    utils.typeSelecBehavior();\n  }\n\n  componentDidUpdate(){\n    utils.magicLabels();\n  }\n\n  callNextPage(page){\n    const divLoad = document.getElementById(\"loading\");\n    divLoad.classList.remove('d-none');\n    let This = this;\n    setTimeout(function(){\n        This.props.history.push(page);\n        window.scrollTo(0, 0);\n        divLoad.classList.add('d-none');\n    },2000);\n  }\n\n  disableSubmit(){\n     // disable submit after click\n     const submitButton = document.getElementById('submit');\n     submitButton.setAttribute('disabled', 'disabled');  \n     document.getElementsByClassName('spinner-border')[0].classList.remove('d-none');\n  }\n\n  handleClickNext(event){\n\n    event.preventDefault();\n\n    // validations for fields \n    let isValid = utils.validateForm();        \n\n      if(isValid){ \n        console.log('call to action');\n\n        this.disableSubmit();\n\n        const $this = event.target;\n        \n        console.log($this.province.value);\n        console.log($this.email.value);\n        console.log($this.textarea.value);\n        console.log($this.password.value);\n        console.log($this.phonenumber.value);\n        console.log($this.postalcode.value);\n        console.log($this.remember.value);\n        if($this.extra){\n          console.log($this.extra.value);\n        }\n\n        //moving to another page\n        this.callNextPage('Options');\n\n        //  call API's here\n \n      }\n    \n\n  }\n\n  handleCheckBox(e){\n    let checkboxVal = '';\n    if(this.state.checkbox == false){\n      checkboxVal = true;\n    }else{\n      checkboxVal = false;\n    }\n    this.setState({checkbox: checkboxVal});\n  }\n\n  checkExtraField = (event) => {\n    if(event.target.value == 'Mustard' || event.target.value == 'Mustardee'){\n        this.setState({\n          extraField: true\n        })\n    } else {\n        this.setState({\n          extraField: false\n        })\n    }\n  }\n\nrender() {\n  const { t } = this.props;\n\n  let extraField = null;\n  if(this.state.extraField) {\n    extraField = < InputText \n      inputtype={\"text\"}\n      name={\"extra\"}\n      placeholder={\"extra\"}\n      required={\"\"}\n      value={this.state.extra}\n      idname={\"extra\"}\n      onChange={(event) => this.setState({extra: event.target.value})}\n      title={\"extra\"}\n      required={\"required\"}\n    />\n  }\n  return (\n    <React.Fragment>\n      <div className=\"container py-md-5 card mt-5 mb-6 border-0 mainform\">\n        <div className=\"row card-body mb-5\">\n          <div className=\"col-lg-6 offset-lg-3\">\n            <h2 className=\"h6 medium mb-4 super-title\"><i className=\"fa fa-circle dotz\" aria-hidden=\"true\"></i>&nbsp;{t('title1.label')}</h2>\n    \n            <form autoComplete=\"off\" name=\"form\" className=\"form\" id=\"form\" onSubmit={this.handleClickNext}>\n\n              < Select \n                title={\"\"}\n                name={\"province\"}\n                placeholder={t('select.label')}\n                options={this.state.selectOptions}\n                action={this.checkExtraField}\n                optionSelected={this.state.province}\n                required={\"required\"}\n              />\n\n              {extraField}\n\n              < InputText \n                inputtype={\"email\"}\n                name={\"email\"}\n                placeholder={t('emailaddress.label')}\n                required={\"\"}\n                value={this.state.email}\n                idname={\"email\"}\n                onChange={(event) => this.setState({email: event.target.value})}\n                autoComplete={\"username\"}\n                title={t('emailaddress.label')}\n                required={\"\"}\n              />\n\n              < InputText \n                inputtype={\"password\"}\n                name={\"password\"}\n                placeholder={t('password.label')}\n                required={\"\"}\n                value={this.state.password}\n                idname={\"password\"}\n                onChange={(event) => this.setState({password: event.target.value})}\n                autoComplete={\"new-password\"}\n                title={t('password.label')}\n                required={\"required\"}\n              />\n\n              < TextArea\n                name={\"textarea\"}\n                value={this.state.textarea}\n                idname={\"textarea\"}\n                onChange={(event) => this.setState({textarea: event.target.value})}\n                rows={4}\n                placeholder={t('textarea.label')}\n                title={t('textarea.label')}\n                required={\"required\"}\n              />\n\n              < InputText \n                inputtype={\"text\"}\n                title={t('phonenumber.label')}\n                name={\"phonenumber\"}\n                placeholder={t('phonenumber.label')}\n                required={\"\"}\n                id={\"phonemask\"}\n                value={this.state.phonenumber}\n                maxLength={14}\n                className={\"form-control input_element phonemask\"}\n                onChange={(event) => this.setState({phonenumber: event.target.value})}\n              />\n\n              < InputText \n                inputtype={\"text\"}\n                title={t('postalcode.label')}\n                name={\"postalcode\"}\n                placeholder={t('postalcode.label')}\n                value={this.state.postalcode}\n                required={\"\"}\n                maxLength={7}\n                onChange={(event) => this.setState({postalcode: event.target.value})}\n              />\n\n              < CheckBox \n                name={\"remember\"}\n                idname={\"remember\"}\n                label={t('remember.label')}\n                value={true}\n                onChange={this.handleCheckBox}\n              />\n\n              < InputText \n                inputtype={\"text\"}\n                title={\"Date fo Birth\"}\n                name={\"date\"}\n                placeholder={\"yyyy/mm/dd\"}\n                required={\"\"}\n                id={\"date\"}\n                value={this.state.date}\n                maxLength={10}\n                className={\"form-control input_element\"}\n                onChange={(event) => this.setState({date: event.target.value})}\n              />\n\n              < SubmitButton \n                name={\"NextStep\"}\n                inputtype={\"submit\"}\n                action={this.onSubmit}\n                id={\"submit\"}\n                label={t('submit.label')}\n              /> \n\n              < ErrorAlertMsg\n                id={\"error-container\"}\n                text={\"Please fill out all required fields!\"}\n              />\n                \n            </form>\n          </div>\n          \n        </div>\n      </div>\n              \n    </React.Fragment>\n    )\n  }\n}\nexport default withTranslation()(Form)"]},"metadata":{},"sourceType":"module"}