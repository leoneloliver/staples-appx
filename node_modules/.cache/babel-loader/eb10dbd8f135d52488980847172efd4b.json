{"ast":null,"code":"var _jsxFileName = \"/Users/lendified/Desktop/staples-x/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputText from '../components/InputText';\nimport Select from '../components/Select';\nimport TextArea from '../components/TextArea';\nimport CheckBox from '../components/CheckBox';\nimport SubmitButton from '../components/SubmitButton'; // import $ from 'jquery';\n\nimport * as utils from '../utils/utils';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkExtraField = event => {\n      if (event.target.value == 'Mustard' || event.target.value == 'Mustardee') {\n        this.setState({\n          extraField: true\n        });\n      } else {\n        this.setState({\n          extraField: false\n        });\n      }\n    };\n\n    this.handleClickNext = this.handleClickNext.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.state = {\n      language: '',\n      email: '',\n      password: '',\n      selectOptions: utils.selectList(),\n      province: '',\n      textarea: '',\n      checkbox: false,\n      extraField: false,\n      extra: ''\n    };\n  }\n\n  componentWillMount() {\n    let iniLang = localStorage.getItem('lang');\n    this.setState({\n      language: iniLang\n    });\n  }\n\n  componentDidMount() {\n    utils.customSelect();\n    utils.magicLabels();\n    this.setState({\n      selectOptions: utils.selectList(this.state.language)\n    });\n  }\n\n  componentDidUpdate() {\n    utils.magicLabels();\n  }\n\n  handleClickNext(event) {\n    event.preventDefault();\n    console.log('call to action'); // console.log(this.state.checkbox);\n    // console.log(this.state.province);\n\n    const $this = event.target;\n    console.log($this.province.value);\n    console.log($this.firstname.value);\n    console.log($this.textarea.value);\n    console.log($this.password.value);\n    console.log($this.remember.value);\n  }\n\n  handleCheckBox(e) {\n    let checkboxVal = '';\n\n    if (this.state.checkbox == false) {\n      checkboxVal = true;\n    } else {\n      checkboxVal = false;\n    }\n\n    this.setState({\n      checkbox: checkboxVal\n    });\n  }\n\n  render() {\n    const t = this.props.t;\n    let extraField = null;\n\n    if (this.state.extraField) {\n      extraField = React.createElement(InputText, {\n        inputtype: \"text\",\n        name: \"extra\",\n        placeholder: \"extra\",\n        required: \"\",\n        value: this.state.extra,\n        idname: \"extra\",\n        onChange: event => this.setState({\n          extra: event.target.value\n        }),\n        title: \"extra\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container py-md-5 card mt-5 mb-6 border-0 mainform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row card-body mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 offset-lg-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h6 text--uppercase medium mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, t('title1.label')), React.createElement(\"form\", {\n      autoComplete: \"off\",\n      name: \"form\",\n      className: \"form\",\n      id: \"form\",\n      onSubmit: this.handleClickNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Select, {\n      title: \"\",\n      name: \"province\",\n      placeholder: \"Selec Please\",\n      options: this.state.selectOptions,\n      action: this.checkExtraField,\n      optionSelected: this.state.province,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), extraField, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      inputtype: \"email\",\n      name: \"firstname\",\n      placeholder: t('emailaddress.label'),\n      required: \"\",\n      value: this.state.email,\n      idname: \"email\",\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      autoComplete: \"username\",\n      title: t('emailaddress.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      inputtype: \"password\",\n      name: \"password\",\n      placeholder: t('password.label'),\n      required: \"\",\n      value: this.state.password,\n      idname: \"password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      autoComplete: \"new-password\",\n      title: t('password.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(InputText, {\n      inputtype: \"email\",\n      name: \"firstname\",\n      placeholder: t('emailaddress.label'),\n      required: \"\",\n      value: this.state.email,\n      idname: \"email\",\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      autoComplete: \"username\",\n      title: t('emailaddress.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(InputText, {\n      inputtype: \"password\",\n      name: \"password\",\n      placeholder: t('password.label'),\n      required: \"\",\n      value: this.state.password,\n      idname: \"password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      autoComplete: \"new-password\",\n      title: t('password.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      name: \"textarea\",\n      value: this.state.textarea,\n      idname: \"textarea\",\n      onChange: event => this.setState({\n        textarea: event.target.value\n      }),\n      rows: 4,\n      placeholder: t('textarea.label'),\n      title: t('textarea.label'),\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      name: \"remember\",\n      idname: \"remember\",\n      label: t('remember.label'),\n      value: true,\n      onChange: this.handleCheckBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      name: \"NextStep\",\n      idName: \"submit\",\n      inputtype: \"submit\",\n      action: this.onSubmit,\n      label: t('submit.label'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withTranslation()(Form);","map":{"version":3,"sources":["/Users/lendified/Desktop/staples-x/src/components/Form.js"],"names":["React","Component","withTranslation","InputText","Select","TextArea","CheckBox","SubmitButton","utils","Form","constructor","props","checkExtraField","event","target","value","setState","extraField","handleClickNext","bind","handleCheckBox","state","language","email","password","selectOptions","selectList","province","textarea","checkbox","extra","componentWillMount","iniLang","localStorage","getItem","componentDidMount","customSelect","magicLabels","componentDidUpdate","preventDefault","console","log","$this","firstname","remember","e","checkboxVal","render","t","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputText from '../components/InputText';\nimport Select from '../components/Select';\nimport TextArea from '../components/TextArea';\nimport CheckBox from '../components/CheckBox';\nimport SubmitButton from '../components/SubmitButton';\n// import $ from 'jquery';\nimport * as utils from '../utils/utils';\n\nclass Form extends Component {\n\n  constructor(props){\n    super(props);\n    this.handleClickNext = this.handleClickNext.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.state = {\n      language: '',\n      email: '',\n      password: '',\n      selectOptions: utils.selectList(),\n      province: '',\n      textarea: '',\n      checkbox: false,\n      extraField: false,\n      extra: ''\n    }\n  }\n\n  componentWillMount(){\n    let iniLang = localStorage.getItem('lang');\n    this.setState({language: iniLang});\n\n  }\n\n  componentDidMount(){\n    utils.customSelect();\n    utils.magicLabels();\n    this.setState({selectOptions: utils.selectList(this.state.language)});\n  }\n\n  componentDidUpdate(){\n    utils.magicLabels();\n  }\n\n  handleClickNext(event){\n\n    event.preventDefault();\n    console.log('call to action');\n    // console.log(this.state.checkbox);\n    // console.log(this.state.province);\n\n    const $this = event.target;\n    \n\n    console.log($this.province.value);\n    console.log($this.firstname.value);\n    console.log($this.textarea.value);\n    console.log($this.password.value);\n    console.log($this.remember.value);\n\n  }\n\n  handleCheckBox(e){\n    let checkboxVal = '';\n    if(this.state.checkbox == false){\n      checkboxVal = true;\n    }else{\n      checkboxVal = false;\n    }\n    this.setState({checkbox: checkboxVal});\n  }\n\n  checkExtraField = (event) => {\n    if(event.target.value == 'Mustard' || event.target.value == 'Mustardee'){\n        this.setState({\n          extraField: true\n        })\n    } else {\n        this.setState({\n          extraField: false\n        })\n    }\n  }\n\nrender() {\n  const { t } = this.props;\n\n  let extraField = null;\n  if(this.state.extraField) {\n    extraField = < InputText \n      inputtype={\"text\"}\n      name={\"extra\"}\n      placeholder={\"extra\"}\n      required={\"\"}\n      value={this.state.extra}\n      idname={\"extra\"}\n      onChange={(event) => this.setState({extra: event.target.value})}\n      title={\"extra\"}\n      required={\"required\"}\n    />\n  }\n  return (\n    <React.Fragment>\n      <div className=\"container py-md-5 card mt-5 mb-6 border-0 mainform\">\n        <div className=\"row card-body mb-5\">\n          \n          <div className=\"col-lg-6 offset-lg-3\">\n            <h2 className=\"h6 text--uppercase medium mb-4\">{t('title1.label')}</h2>\n            \n            <form autoComplete=\"off\" name=\"form\" className=\"form\" id=\"form\" onSubmit={this.handleClickNext}>\n\n              < Select \n                title={\"\"}\n                name={\"province\"}\n                placeholder={\"Selec Please\"}\n                options={this.state.selectOptions}\n                action={this.checkExtraField}\n                optionSelected={this.state.province}\n                required={\"required\"}\n              />\n\n              {extraField}\n\n              <div className=\"row\">\n                <div className=\"col-4\">\n\n                  < InputText \n                    inputtype={\"email\"}\n                    name={\"firstname\"}\n                    placeholder={t('emailaddress.label')}\n                    required={\"\"}\n                    value={this.state.email}\n                    idname={\"email\"}\n                    onChange={(event) => this.setState({email: event.target.value})}\n                    autoComplete={\"username\"}\n                    title={t('emailaddress.label')}\n                    required={\"required\"}\n                  />\n\n                </div>\n                <div className=\"col-8\">\n                  < InputText \n                    inputtype={\"password\"}\n                    name={\"password\"}\n                    placeholder={t('password.label')}\n                    required={\"\"}\n                    value={this.state.password}\n                    idname={\"password\"}\n                    onChange={(event) => this.setState({password: event.target.value})}\n                    autoComplete={\"new-password\"}\n                    title={t('password.label')}\n                    required={\"required\"}\n                  />\n                </div>\n              </div>\n\n              < InputText \n                inputtype={\"email\"}\n                name={\"firstname\"}\n                placeholder={t('emailaddress.label')}\n                required={\"\"}\n                value={this.state.email}\n                idname={\"email\"}\n                onChange={(event) => this.setState({email: event.target.value})}\n                autoComplete={\"username\"}\n                title={t('emailaddress.label')}\n                required={\"required\"}\n              />\n\n              < InputText \n                inputtype={\"password\"}\n                name={\"password\"}\n                placeholder={t('password.label')}\n                required={\"\"}\n                value={this.state.password}\n                idname={\"password\"}\n                onChange={(event) => this.setState({password: event.target.value})}\n                autoComplete={\"new-password\"}\n                title={t('password.label')}\n                required={\"required\"}\n              />\n\n              < TextArea\n                name={\"textarea\"}\n                value={this.state.textarea}\n                idname={\"textarea\"}\n                onChange={(event) => this.setState({textarea: event.target.value})}\n                rows={4}\n                placeholder={t('textarea.label')}\n                title={t('textarea.label')}\n                required={\"required\"}\n              />\n\n              < CheckBox \n                name={\"remember\"}\n                idname={\"remember\"}\n                label={t('remember.label')}\n                value={true}\n                onChange={this.handleCheckBox}\n              />\n\n              < SubmitButton \n                name={\"NextStep\"}\n                idName={\"submit\"}\n                inputtype={\"submit\"}\n                action={this.onSubmit}\n                label={t('submit.label')}\n              />   \n\n            </form>\n          </div>\n          \n        </div>\n      </div>\n              \n    </React.Fragment>\n    )\n  }\n}\nexport default withTranslation()(Form)"]},"metadata":{},"sourceType":"module"}